import java.nio.file.{Paths, Files}
import java.io.File
import java.nio.charset.StandardCharsets
import scala.io._
val list1 = List("PT_KEY","TENANT_KEY","LMRN","GMRN","GVN_NM","FMY_NM","DOB","EXPIRATION_INDICATOR","SRC_RACE_CD","SRC_RACE_DESC","RACE_CD","RACE_CD_KEY","SRC_GNDR","SRC_GNDR_DESC","GNDR_CD","GNDR_CD_KEY","ADDR_LINE1","ADDR_LINE2","ADDR_CITY","SRC_ADDR_CNTRY_CD","SRC_ADDR_COUNTRY","ADDR_CNTRY_CD","ADDR_CTRY_CD_KEY","SRC_COUNTY_CD","COUNTY_DESC","ADMTNG_FST_NM","ADMTNG_LST_NM","ADMTNG_MIDDLE_NM","PHYSICIAN_ID","ADV_DIR_COMMENT","ADV_DIR_COPY_PVD","ADV_DIR_LVNG_WILL","ADV_DIR_LVNG_WILL_COPY_PVD","ADV_DIR_MEDICAL_POA","ADV_DIR_MEDICAL_POA_PVD","ADV_DIR_OUT_HSPTL_DNR_ORDR","ADV_DIR_OUT_HSPTL_DNR_ORDR_PVD","ADV_DIR_REFER_TO_SOCWORK","ADV_DIR_REQ_ASST_BY_SOCWORKER","ADV_DIR_REQD_BROCHURE","ADV_DIR_REQ_FORM","ADV_DIR_REObsLabTED","ADV_DIR_UNABLE_TO_OBTAIN_INFO","AGE","ATNDNG_FST_NM","ATNDNG_LST_NM","ATNDNG_MIDDLE_NM","ATNDNG_PHYSICIAN_ID","BED","CASE_END_DTM","CASE_NUMBER","CASE_START_DTM","CASE_UPDATED_BY","CASE_UPDATED_DTM","COMMUNICATION_CD","COMMUNICATION_DESC","CONCAT_NM","CONCATENATED_NM","CONFIDENTIAL_INDICATOR","COORDNTG_FST_NM","COORDNTG_HOSPITAL_SVC_CD","COORDNTG_HOSPITAL_SVC_DESC","COORDNTG_LST_NM","COORDNTG_MIDDLE_NM","COORDNTG_PHYSICIAN_ID","CURR_DATE","EMGCY_CNTCT_ADDR_LINE1","EMGCY_CNTCT_CITY","EMGCY_CNTCT_COUNTRY_CD","EMGCY_CNTCT_COUNTRY_DESC","EMGCY_CNTCT_FST_NM","EMGCY_CNTCT_LST_NM","EMGCY_CNTCT_PHONE_HOME","EMGCY_CNTCT_PHONE_WORK","EMGCY_CNTCT_POSTAL","EMGCY_CNTCT_RLTNSHP_CD","EMGCY_CNTCT_RLTNSHP_DESC","EMGCY_CNTCT_STATE_CD","EMGCY_CNTCT_STATE_DESC","FAX","FINANCIAL_CLASS_CD","FINANCIAL_CLASS_DESC","HOME_CENTER_CD","HOME_CENTER_DESC","HOSPITAL_SVC_CD","HOSPITAL_SVC_DESC","INSURANCE_IND","IS_VALID_FOR_LOE","ISOLATION_ALERT","ISOLATION_DESC","ISOLATION_IND","LANGUAGE_CD","LANGUAGE_DESC","LOCAL_CNTCT","LOCAL_CNTCT_PHONE","MARITAL_STATUS_CD","MARITAL_STATUS_DESC","MEDICARE_IND","MIDDLE_INITIAL","NXT_OF_KIN_ADDR_LINE1","NXT_OF_KIN_CITY","NXT_OF_KIN_COUNTRY_CD","NXT_OF_KIN_COUNTRY_DESC","NXT_OF_KIN_FST_NM","NXT_OF_KIN_LST_NM","NXT_OF_KIN_PHONE_HOME","NXT_OF_KIN_PHONE_WORK","NXT_OF_KIN_POSTAL","NXT_OF_KIN_RLTNSHP_CD","NXT_OF_KIN_RLTNSHP_DESC","NXT_OF_KIN_STATE_CD","NXT_OF_KIN_STATE_DESC","NURSE_STATION","ORIGINAL_REGN_DTM","OUTSIDE_FACILITY_CD","OUTSIDE_FACILITY_DESC","OUTSIDE_MRN","PATIENT_CLASS_CD","PATIENT_CLASS_DESC","PATIENT_CLASSS_STATUS_CD","PATIENT_CREATED_BY","PATIENT_CREATED_DTM","PATIENT_ID_ALERT_IND","PATIENT_TYPE_CD","PATIENT_TYPE_DESC","PHONE_HOME","PHONE_MOBILE","PHONE_PAGER","PHONE_WORK","PLACED_IN_BED_DTM","POSTAL","PRK","RELIGION_CD","RELIGION_DESC","SSN","STATE_CD","STATE_DESC","VIP_IND","DEATH_DT","DEATH_INFO_SRC_DESC","DEATH_PLACE_DESC","LST_CNTCT_DATE","LST_CNTCT_METHOD_DESC","LST_CNTCT_MONTH","LST_CNTCT_YEAR","RECORD_STATUS","SUSPECT_DEATH_INFO_SRC_DESC","SUSPECT_INFO_SRC_CD","ObsLab_STATUS_DESC","DCD_FLG","PHOTO","PREVIOUS_PHOTO","PATIENT_CONSENT","IMAGE_CAPTURE_DATE","IMAGE_CATEGORY_VALUE")
val list2 = List("B_PROC_RUN_ID","LMRN","GVN_NM","FMY_NM","DOB","SRC_RACE_CD","SRC_RACE_DESC","SRC_GNDR","SRC_GNDR_DESC","ADDR_LINE1","ADDR_LINE2","ADDR_CITY","SRC_ADDR_COUNTRY","SRC_COUNTY_CD","COUNTY_DESC","ADDR_CNTRY_CD","ADMTNG_FST_NM","ADMTNG_LST_NM","ADMTNG_MIDDLE_NM","PHYSICIAN_ID","ADV_DIR_COMMENT","ADV_DIR_COPY_PVD","ADV_DIR_LVNG_WILL","ADV_DIR_LVNG_WILL_COPY_PVD","ADV_DIR_MEDICAL_POA","ADV_DIR_MEDICAL_POA_PVD","ADV_DIR_OUT_HOSPITAL_DNR_ORDER","ADV_DIR_OUT_HOSPITAL_DNR_ORDR_PVD","ADV_DIR_REFER_TO_SOCWORK","ADV_DIR_REQ_ASST_BY_SOCWORKER","ADV_DIR_REQD_BROCHURE","ADV_DIR_REQ_FORM","ADV_DIR_REObsLabTED","ADV_DIR_UNABLE_TO_OBTAIN_INFO","AGE","ATNDNG_FST_NM","ATNDNG_LST_NM","ATNDNG_MIDDLE_NM","ATNDNG_PHYSICIAN_ID","BED","CASE_END_DTM","CASE_NUMBER","CASE_START_DTM","CASE_UPDATED_BY","CASE_UPDATED_DTM","COMMUNICATION_CD","COMMUNICATION_DESC","CONCAT_NM","CONCATENATED_NM","CONFIDENTIAL_INDICATOR","COORDNTG_FST_NM","COORDNTG_HOSPITAL_SVC_CD","COORDNTG_HOSPITAL_SVC_DESC","COORDNTG_LST_NM","COORDNTG_MIDDLE_NM","COORDNTG_PHYSICIAN_ID","CURR_DATE","EMGCY_CNTCT_ADDR_LINE1","EMGCY_CNTCT_CITY","EMGCY_CNTCT_COUNTRY_CD","EMGCY_CNTCT_COUNTRY_DESC","EMGCY_CNTCT_FST_NM","EMGCY_CNTCT_LST_NM","EMGCY_CNTCT_PHONE_HOME","EMGCY_CNTCT_PHONE_WORK","EMGCY_CNTCT_POSTAL","EMGCY_CNTCT_RLTNSHP_CD","EMGCY_CNTCT_RLTNSHP_DESC","EMGCY_CNTCT_STATE_CD","EMGCY_CNTCT_STATE_DESC","FAX","FINANCIAL_CLASS_CD","FINANCIAL_CLASS_DESC","HOME_CENTER_CD","HOME_CENTER_DESC","HOSPITAL_SVC_CD","HOSPITAL_SVC_DESC","INSURANCE_IND","IS_VALID_FOR_LOE","ISOLATION_ALERT","ISOLATION_DESC","ISOLATION_IND","LANGUAGE_CD","LANGUAGE_DESC","LOCAL_CNTCT","LOCAL_CNTCT_PHONE","MARITAL_STATUS_CD","MARITAL_STATUS_DESC","MEDICARE_IND","MIDDLE_INITIAL","NXT_OF_KIN_ADDR_LINE1","NXT_OF_KIN_CITY","NXT_OF_KIN_COUNTRY_CD","NXT_OF_KIN_COUNTRY_DESC","NXT_OF_KIN_FST_NM","NXT_OF_KIN_LST_NM","NXT_OF_KIN_PHONE_HOME","NXT_OF_KIN_PHONE_WORK","NXT_OF_KIN_POSTAL","NXT_OF_KIN_RLTNSHP_CD","NXT_OF_KIN_RLTNSHP_DESC","NXT_OF_KIN_STATE_CD","NXT_OF_KIN_STATE_DESC","NURSE_STATION","ORIGINAL_REGN_DTM","OUTSIDE_FACILITY_CD","OUTSIDE_FACILITY_DESC","OUTSIDE_MRN","PATIENT_CLASS_CD","PATIENT_CLASS_DESC","PATIENT_CLASSS_STATUS_CD","PATIENT_CREATED_BY","PATIENT_CREATED_DTM","PATIENT_ID_ALERT_IND","PATIENT_TYPE_CD","PATIENT_TYPE_DESC","PHONE_HOME","PHONE_MOBILE","PHONE_PAGER","PHONE_WORK","PLACED_IN_BED_DTM","POSTAL","PRK","RELIGION_CD","RELIGION_DESC","SSN","STATE_CD","STATE_DESC","VIP_IND","EXPIRATION_INDICATOR")
val list3 = List("process_run_id","medrecnum","firstname","lastname","dob","racecd","racedesc","sex","sexdesc","addressline1","addressline2","city","countrydesc","countycd","countydesc","countrycd","admittingfirstname","admittinglastname","admittingmiddlename","admittingphysicianid","advanceddirectivecomment","advanceddirectivecopyprovided","advanceddirectivelivingwill","advanceddirectivelivingwillcopyprovided","advanceddirectivemedpoa","advanceddirectivemedpoaprovided","advanceddirectiveouthospdnrord","advanceddirectiveouthospdnrordprovided","advanceddirectiverefertosocwork","advanceddirectivereqasstbysocworker","advanceddirectivereqbrochure","advanceddirectivereqform","advanceddirectivereObsLabted","advanceddirectiveunabletoobtaininfo","age","attendingfirstname","attendinglastname","attendingmiddlename","attendingphysicianid","bed","caseenddatetime","casenumber","casestartdatetime","caseupdatedby","caseupdateddatetime","communicationcd","communicationdesc","concatname","concatenatedname","confidentialind","coordinatingfirstname","coordinatinghospsvccd","coordinatinghospsvcdesc","coordinatinglastname","coordinatingmiddlename","coordinatingphysicianid","currentdate","emergencycontactaddressline1","emergencycontactcity","emergencycontactcountrycd","emergencycontactcountrydesc","emergencycontactfirstname","emergencycontactlastname","emergencycontactphonehome","emergencycontactphonework","emergencycontactpostal","emergencycontactrelationshipcd","emergencycontactrelationshipdesc","emergencycontactstatecd","emergencycontactstatedesc","fax","financialclasscd","financialclassdesc","homecentercd","homecenterdesc","hospitalsvccd","hospitalsvcdesc","insuranceind","isvalidforloe","isolationalert","isolationdesc","isolationind","languagecd","languagedesc","localcontact","localcontactphone","maritalstatuscd","maritalstatusdesc","medicareind","mi","nextofkinaddressline1","nextofkincity","nextofkincountrycd","nextofkincountrydesc","nextofkinfirstname","nextofkinlastname","nextofkinphonehome","nextofkinphonework","nextofkinpostal","nextofkinrelationshipcd","nextofkinrelationshipdesc","nextofkinstatecd","nextofkinstatedesc","nursestation","originalregistrationdatetime","outsidefacilitycd","outsidefacilitydesc","outsidemrn","patientclasscd","patientclassdesc","patientclassstatuscode","patientcreatedby","patientcreateddatetime","patientidalertind","patienttypecd","patienttypedesc","phonehome","phonemobile","phonepager","phonework","placedinbeddatetime","postal","prk","religioncd","religiondesc","ssn","statecd","statedesc","vipind","expirationind")

val VOut = Source.fromFile(new File("C:\\tmp\\ObsLab\\VOut.txt")).getLines.toList(0).split(",").toList
val PigVertica = Source.fromFile(new File("C:\\tmp\\ObsLab\\PigVertica.txt")).getLines.toList(0).split(",").toList
val PigHive = Source.fromFile(new File("C:\\tmp\\ObsLab\\PigHive.txt")).getLines.toList(0).split(",").toList

val listZip = PigVertica.zip(PigHive)
val listM = listZip.toMap
val cc = VOut.map(a => {(a,a,listM.getOrElse(a,""))}).map(tuple => tuple.productIterator.mkString("\t"))
Files.write(Paths.get("C:\\tmp\\ObsLab\\out.txt"), cc.mkString("\n").getBytes(StandardCharsets.UTF_8))